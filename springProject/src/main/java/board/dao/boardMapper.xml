<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardSQL">
	<!-- 글쓰기 -->
	<insert id="boardWrite" parameterType="java.util.Map">
		insert into board(seq, id, name, email, subject, content, ref)
		values (seq_board.nextval
				, #{id}
				, #{name}
				, #{email}
				, #{subject}
				, #{content}
				, seq_board.currval)
		
	</insert>
	
	<!-- 페이징 처리  --> 
	<select id="getBoardList" parameterType="java.util.Map" resultType="board">
		<![CDATA[
		select * from
		(select rownum rn, tt.* from
		(select seq, id, name, email, subject, content, ref, lev, step, pseq, reply, hit,
		case
		when to_char(logtime, 'yyyy.mm.dd') = to_char(sysdate, 'yyyy.mm.dd')
		then to_char(logtime, 'pm hh:mi')
		else to_char(logtime, 'yyyy.mm.dd') end logtime
		from board
		order by ref desc, step asc)tt)
		where rn >= #{startNum} and rn <= #{endNum}
		]]>
	</select>
	
	<!-- 검색 -->
	<select id="getBoardSearch" parameterType="java.util.Map" resultType="board">
		<![CDATA[
		select * from
		(select rownum rn, tt.* from
		(select seq, id, name, email, subject, content, ref, lev, step, pseq, reply, hit,
		case
		when to_char(logtime, 'yyyy.mm.dd') = to_char(sysdate, 'yyyy.mm.dd')
		then to_char(logtime, 'pm hh:mi')
		else to_char(logtime, 'yyyy.mm.dd') end logtime
		from board
		where ${searchOption} like '%'||#{keyword}||'%'
		order by ref desc, step asc)tt)
		where rn >= #{startNum} and rn <= #{endNum}
		]]>
	</select>

	<!-- 총 글 수 가져오기(페이징처리위해) -->
	<select id="getBoardTotalA" resultType="int" >
		select count(*) from board
	</select>
	
	<!-- 검색 총 글 수 -->
	<select id="getBoardSearchTotalA" parameterType="java.util.Map" resultType="int">
		select count(*) from board where ${searchOption} like '%'||#{keyword}||'%'
	</select>
	
	<!-- 작성한 글 확인, 글 하나만 가져옴 -->
	<select id="getBoardView" parameterType="int" resultType="board">
		select * from board where seq=#{seq}
	</select>
	
	<!-- 답글쓰기 -->
	<insert id="boardReply" parameterType="java.util.Map">
		begin 
			update board set step=step+1 where ref=#{ref} and step>#{step};
			
			insert into board values(seq_board.nextval
									,#{id}
									,#{name}
									,#{email}
									,#{subject}
									,#{content}
									,#{ref}
									,#{lev}+1
									,#{step}+1
									,#{pseq}
									,0
									,0
									,sysdate);
									
			update board set reply=reply+1 where seq=#{pseq};
		end;
	</insert>
	
	<!-- 글 수정 -->
	<update id="boardModify" parameterType="java.util.Map">
		update board set subject=#{subject}, content=#{content}, logtime=SYSDATE
 		where seq=#{seq}
	</update>
	<!-- 글삭제 -->
	<delete id="boardDelete" parameterType="int">
		begin
			update board set reply = reply-1 where seq=(select pseq from board where seq=#{seq});
			update board set subject='[원글이 삭제된 답글]' || subject where pseq=#{seq};
			delete board where seq=#{seq};
		end; 
	</delete>
</mapper>